#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#define _CRT_SECURE_NO_WARNINGS

typedef struct TreeNode {
    char question[100];
    char choices[4][50];
    int answer;
    struct TreeNode* left;
    struct TreeNode* right;
} TreeNode;

TreeNode* createQuestionNode(const char* question, const char* choice1, const char* choice2, const char* choice3, const char* choice4, int answer) {
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    strcpy_s(newNode->question, question);
    strcpy_s(newNode->choices[0], choice1);
    strcpy_s(newNode->choices[1], choice2);
    strcpy_s(newNode->choices[2], choice3);
    strcpy_s(newNode->choices[3], choice4);
    newNode->answer = answer;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

void addQuestion(TreeNode* root, TreeNode* left, TreeNode* right) {
    root->left = left;
    root->right = right;
}

int main() {
    TreeNode* root = createQuestionNode("1+1?", "1", "2", "3", "4", 2);
    TreeNode* node1 = createQuestionNode("2+2?", "1", "2", "3", "4", 4);
    TreeNode* node2 = createQuestionNode("3+3?", "1", "6", "9", "12", 2);

    addQuestion(root, node1, node2);

    TreeNode* currentNode = root;
    double score = 0;

    while (currentNode != NULL) {
        printf("%s\n", currentNode->question);
        for (int i = 0; i < 4; ++i) {
            printf("%d. %s\n", i + 1, currentNode->choices[i]);
        }

        int userAnswer;
        printf("Enter your answer (1-4): ");
        scanf_s("%d", &userAnswer);

        if (userAnswer == currentNode->answer) {
            score += 0.5;
            printf("Correct!\n");
        }
        else {
            printf("Incorrect. The correct answer is %d.\n", currentNode->answer);
        }

        int direction;
        printf("Choose your next question (1:left, 2:right, 3:exit): ");
        scanf_s("%d", &direction);

        if (direction == 1) {
            currentNode = currentNode->left;
        }
        else if (direction == 2) {
            currentNode = currentNode->right;
        }
        else {
            currentNode = NULL;
        }
    }

    printf("Your final score is: %.1f\n", score);

    return 0;
}
